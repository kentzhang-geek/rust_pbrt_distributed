[package]
name = "rpd"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
nalgebra = "0.31.0"
nalgebra-glm = "*"
ndarray = "*"
image = "*"
gli-rs = { path = "G:\\source\\gli-rs" }
#gli-rs = { git = "https://github.com/kentzhang-geek/gli-rs" }

# use log and env_logger to debug on runtime
log = "*"
env_logger = "*"

# below should use for debug , and to remove when visualize has other method
three = "*"
genmesh = "*"
mint = "*"

# scene_file used for store scene
scene_file = {path="../scene_file"}

# those asset format should be supported: fbx, gltf(glb), obj
# espacially fbx
# FUCK ! this is not usable, I will write CPP code and export API to convert fbx to flatbuffers!
#[dependencies.fbxcel]
#version = "*"
#features = ["writer", "tree", "indextree"]

[dependencies.gltf]
version = "1.0"
features = ["extras", "names", "KHR_lights_punctual", "KHR_materials_pbrSpecularGlossiness", "KHR_materials_unlit", "KHR_texture_transform", "KHR_materials_variants", "KHR_materials_volume", "KHR_materials_specular"]

# use flatbuffers as scene file encoder and decoder
[dependencies.flatbuffers]
version = "*"

[dev-dependencies]
three = "*"
genmesh = "*"
mint = "*"
